#!/usr/bin/perl -w
#this script limits the scan results of a qualys file
use strict;
use warnings;
use Getopt::Long;
use List::Util qw(shuffle);


my @lines;
my $currentPos;
#Get Arguments
my %args;
GetOptions(\%args,
           "f=s",
           "o=s",
) or die "Invalid arguments!";
die "Missing Scan File -f!" unless $args{f};
die "Missing Out File -o!" unless $args{o};


#open the file for processing
my $scan_fh;
my $out_fh;
open($scan_fh, "<$args{f}");
$args{o} =~ s/\\/\\\\/g;
open($out_fh, ">$args{o}");

#initialize switches
my $ip = "0";
my $switch = "0";
my $vulns = "0";
my $vuln = "0";

while (<$scan_fh>) 
{
	
	my($line) = $_;
	chomp($line);
	
	if ($line =~ /<SCAN/i) {
		processHost($line);
		next;
	}
	
	if ($line =~ /<IP/i) {
		$ip = "1";
		#print $line . "\n";
		#$line = &scrubData($line);
		processHost($line);
		next;
	} 
	
	if ($line =~ /<VULNS/i || $line =~ /<\/VULNS/i) {
		processHost($line);
		if ($line =~ /<\/VULNS/i) {
			$vulns = "0";
			$vuln = "0";
		}else{
			$vulns = "1";
		}
		next;
	}
	
	

	if ($line =~ /<OS/i && $ip == "1" ) {
		processHost($line);
		next;
		
	}
	
	
	if ($line =~ /<\/IP/i && $ip == "1") {
		dumpArray();
		printObject ($line . "\n");
		$ip = "0";
		$switch  = "0";
		undef @lines;
		next;

	} 
	

	
	if ($ip eq "1") {
		if (($line =~ /<CAT/i || $line =~ /<\/CAT/i) && $vulns == "1") {
		processHost($line);
		next;
		}
		if ($line =~ /<VULN/i || $line =~ /<\/VULN/i) {
		$vuln = "1";
		processHost($line);
		next;
		}
		if ($line =~ /<TITLE/i && $vuln == "1" ) {
		processHost($line);
		$vuln = "0";
		next;
		}
		
	}
	


}

printObject ("</SCAN>" . "\n");

sub processHost {
	
	my ($object) = @_;
	$object = $object . "\n";
	push (@lines, $object);

}

#This will scrub the scan file so that you can send it outside the network.  Primarily to support troubleshooting 
sub scrubData {

	my($line) = @_;
	my ($ip) = $line =~ /value="(.*?)"/;
	my ($dns) = $line =~ /name="(.*?)"/;
	my ($status) = $line =~ /status="(.*?)"/;
	my @ips = split /\./, $ip;
	my @shf = shuffle(@ips);
	my $ele_attr;
    $ip = join ('.', @shf);
	$ele_attr = '<IP value="' . $ip . '" ';
	if (length($dns)) {
	    my @dns = split //, $dns;
		my @dns_shf = shuffle(@dns);
		$dns = join ('', @dns_shf);
		$ele_attr = $ele_attr . 'name="' . $dns . '" ';
	}
	if (length($status)) {
		$ele_attr = $ele_attr . 'status="' . $status . '"';
	}
	
	$ele_attr = $ele_attr . '>';
	return $ele_attr;
	
}
	
sub printObject {

	my($object) = @_;
	print $out_fh $object;


}

sub dumpArray {
	print $out_fh @lines;
}


close($scan_fh);

close($out_fh);
